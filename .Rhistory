complete <- function(directory, id = 1:332) {
filenames <- list.files (directory, full.names=T)
nmaster <- c(0,0)
for (i in id) {
m <- read.csv(filenames[i])
no <-c(i, nrow(m[complete.cases(m),]))
nmaster <- rbind(nmaster,no)
}
nmaster <- nmaster[2:nrow(nmaster), ]
nmaster <- data.frame(nmaster)
col.names(nmaster) <- ('id','nobs')
nmaster
}
get.wd()
getwd()
setwd("~/Project2/ProgrammingAssignment2")
getwd()
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
test <- c(1,4,5,3,2,45,)
test <- c(1,4,5,3,2,45,2)
makeVector(test)
test$getmean
tee <- makeVector(test)
tess
tee
tee$getmean()
tee$getmean
tee$set
cachemean(test)
cachemean(tee)
mean(test)
get2 <- function() x
get2
get2()
get2(2)
it <- function() 2+5
it()
x
c
co
test
it(test)
it
x <<-2
x
cachemean(test)
t2 <- makeVector(c(12,14,15,1))
t2
names(t2)
m
t2$getmean()
cachemean(c(1,23))
cachemean(t2
)
t2
t2$getmean()
t2$get()
t2$set()
t2$setmean()
m
## Project 2 for R programming
## creates a special matrix that has the ability of keeping the cashed value
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinv <- function(inv) m <<- inv
getinv <- function() m
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
## checks if the inverse of the matrix is already present before calculating it
cacheSolve <- function(x, ...) {
m <- x$getinv()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinv(m)
m
}
c
coo
ct <- c(3 , 5, 2 , 1:6:20, 2,4)
ct
ct <- c(3 , 5, 2 ,23,8 ,3, 2,4)
ct
cm <- matrix(ct,3,3)
ct <- c(3 , 5, 2 ,23,8 ,3, 2,4, 5)
cm <- matrix(ct,3,3)
cm
solve(cm)
ct1 <- c(4,6,2,1)
cm1 <- matrix(ct1,2,2)
ct1
cm1
cm
cm2 <- cm
cm2
cm1
makeCacheMatrix(cm1)
cs1 <- makeCacheMatrix(cm1)
cs1
cs1$getinv()
cacheSolve(cs1)
cm1
solve(cm1)
cm2
cs2 <- makeCacheMatrix(cm2)
cs
cs2
cacheSolve(cs2)
cacheSolve(cs2)
cacheSolve(cs1)
cm1
cm12 <- matrix(c(7,2,6,1),2,2)
cm12
cm1
cs1
cs1$set()
cs1$set(cm12)
cs1
cs1$get()
cacheSolve(cs1)
cacheSolve(cs1)
